package com.krishna.streamsgroup;

import java.lang.reflect.Array;
import java.util.List;
import java.util.Map;
import java.util.Arrays;
import java.util.stream.Collectors;

public class GroupBy {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		List<Integer> numbers = Arrays.asList(-1, -45, -250,0, 1,2,3,4,5,6,7,8,9,10);
//				Array.aslist(1,2,3,4,5,6,7,8,9,10); 
		
		Map<Object, List<Integer>> numberByEvenOdd = numbers.stream()
				.collect(Collectors.groupingBy(n -> n%2 == 0 ? "Even" : "Odd"));
		
		System.out.println(numberByEvenOdd);
		
			
		Map<Object, List<Integer>> numberByPveNve= numbers.stream()
				.collect(Collectors.groupingBy(n -> n < 0 ? "Negetive" : n > 0 ? "Possitve":"Zero"));
		
		System.out.println(numberByPveNve);
		
		
		List<String> listName = Arrays.asList("ravi", "Aruna", "Vamsi", "Krishna", "Kiran", "Arun");
		
		Map<Character, List<String>> fLetter = listName.stream()
				.collect(Collectors.groupingBy(name -> name.charAt(0)));
		
		System.out.println(fLetter);
		
		
		List<String> listNameNo = Arrays.asList("ravi", "Aruna", "Vamsi", "Krishna", "Kiran", "Arun");
		
		Map<Object, List<String>> fLetterNo = listName.stream()
				.collect(Collectors.groupingBy(count -> count.charAt(0).Collectors.counting()));
		
		System.out.println(fLetter);
		
		
		
		
		
	}

}
